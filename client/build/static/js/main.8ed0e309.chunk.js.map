{"version":3,"sources":["Components/Task/index.js","Components/App/Modal/CloseButton.js","Components/Button/index.js","Components/Field/index.js","Components/App/Modal/index.js","Components/App/NewTaskForm/index.js","Components/App/index.js","index.js"],"names":["Task","completed","onToggle","name","onClick","className","type","checked","onChange","CloseButton","aria-label","width","height","viewBox","aria-hidden","focusable","d","variants","Button","children","variant","disabled","includes","Field","textarea","onSave","onClose","initialValue","saveMsg","minRows","required","multiLine","props","useState","value","setValue","active","setActive","form","createRef","save","e","preventDefault","blur","cancel","onSubmit","onBlur","current","contains","relatedTarget","ref","nativeEvent","inputType","target","onFocus","tag","Modal","isOpen","onUpdate","onDelete","task","description","onRequestClose","contentLabel","overlayClassName","placeholder","ReactModal","setAppElement","NewTaskForm","autoFocus","API_ENDPOINT","App","loading","setLoading","tasks","setTasks","modalIsOpen","setIsModalOpen","activeTask","setActiveTask","toggleTask","index","updateTask","_id","oldTasks","newTasks","axios","patch","catch","err","console","log","useEffect","get","then","res","data","error","length","map","newTask","post","splice","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ed0e309.chunk.js","sourcesContent":["import React from 'react'\nimport './index.scss'\n\nexport default function Task({ completed, onToggle, name, onClick }) {\n  return (\n    <li className='Task'>\n      <input\n        className='Task__checkbox'\n        type='checkbox'\n        checked={completed}\n        onChange={onToggle}\n      />\n      <p\n        onClick={onClick}\n        className={'Task__name' + (completed ? ' Task__name--completed' : '')}\n      >\n        {name}\n      </p>\n    </li>\n  )\n}\n","import React from 'react'\n\nexport default function CloseButton({ onClick }) {\n  return (\n    <button\n      type='button'\n      aria-label='Close'\n      className='CloseButton'\n      onClick={onClick}\n    >\n      <svg\n        width='44'\n        height='44'\n        viewBox='0 0 44 44'\n        aria-hidden='true'\n        focusable='false'\n        className='CloseButton__icon'\n      >\n        <path d='M0.549989 4.44999L4.44999 0.549988L43.45 39.55L39.55 43.45L0.549989 4.44999Z' />\n        <path d='M39.55 0.549988L43.45 4.44999L4.44999 43.45L0.549988 39.55L39.55 0.549988Z' />\n      </svg>\n    </button>\n  )\n}\n","import React from 'react'\nimport './index.scss'\n\nconst variants = ['primary', 'delete', 'text']\n\nexport default function Button({\n  children,\n  variant,\n  className = '',\n  type = 'button',\n  onClick = () => {},\n  disabled = false,\n}) {\n  return (\n    <button\n      className={\n        'Button ' +\n        className +\n        (variant && variants.includes(variant) ? ` Button--${variant}` : '')\n      }\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  )\n}\n","import React, { createRef, useState } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport './index.scss'\nimport Button from 'Components/Button'\n\nexport default function Field({\n  onSave,\n  onClose = () => {},\n  className = '',\n  initialValue = '',\n  saveMsg = 'Save',\n  minRows = 1.5,\n  required = false,\n  multiLine = false,\n  ...props\n}) {\n  const [value, setValue] = useState(initialValue)\n  const [active, setActive] = useState(false)\n  const form = createRef(null)\n  let textarea\n\n  function save(e) {\n    e.preventDefault()\n    textarea.blur()\n    setActive(false)\n    onSave(value)\n    onClose()\n  }\n\n  function cancel() {\n    setValue(initialValue)\n    setActive(false)\n    onClose()\n  }\n\n  function handleBlur(e) {\n    if (!form.current.contains(e.relatedTarget)) {\n      // if focus leaves the form\n      cancel()\n    }\n  }\n\n  function handleChange(e) {\n    if (!multiLine && e.nativeEvent.inputType === 'insertLineBreak') save(e)\n    else setValue(e.target.value)\n  }\n\n  return (\n    <form\n      onSubmit={save}\n      className={`Field ${className}`}\n      onBlur={handleBlur}\n      ref={form}\n    >\n      <TextareaAutosize\n        onChange={handleChange}\n        onFocus={() => setActive(true)}\n        minRows={minRows}\n        value={value}\n        required={required}\n        ref={(tag) => (textarea = tag)}\n        {...props}\n      />\n      {active && (\n        <>\n          <Button\n            variant='primary'\n            type='submit'\n            disabled={required && value === ''}\n          >\n            {saveMsg}\n          </Button>\n          <Button\n            variant='text'\n            onClick={cancel}\n            className='Field__cancel-button'\n          >\n            Cancel\n          </Button>\n        </>\n      )}\n    </form>\n  )\n}\n","import React from 'react'\nimport ReactModal from 'react-modal'\n\nimport './index.scss'\nimport CloseButton from './CloseButton'\nimport Field from 'Components/Field'\nimport Button from 'Components/Button'\n\nReactModal.setAppElement('#root')\n\nexport default function Modal({\n  isOpen,\n  onClose,\n  onToggle,\n  onUpdate,\n  onDelete,\n  task = {\n    completed: false,\n    name: '',\n    description: '',\n  },\n}) {\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      onRequestClose={onClose}\n      contentLabel='Task details'\n      overlayClassName='Modal'\n      className='Modal__container container'\n    >\n      <div className='Modal__inner-container'>\n        <div className='Modal__close-button-wrapper'>\n          <CloseButton onClick={onClose} />\n        </div>\n        <div className='Modal__checkbox-wrapper'>\n          <input type='checkbox' checked={task.completed} onChange={onToggle} />\n        </div>\n        <Field\n          onSave={(name) => onUpdate({ name })}\n          initialValue={task.name}\n          required={true}\n          className='Modal__name-field'\n        />\n        <Field\n          onSave={(description) => onUpdate({ description })}\n          initialValue={task.description}\n          multiLine={true}\n          minRows={10}\n          placeholder='Description'\n          className='Modal__description-field'\n        />\n        <div className='Modal__delete-button-wrapper'>\n          <Button variant='delete' onClick={() => onDelete()}>\n            Delete Task\n          </Button>\n        </div>\n      </div>\n    </ReactModal>\n  )\n}\n","import React, { useState } from 'react'\nimport Field from 'Components/Field'\nimport './index.scss'\n\nexport default function NewTaskForm({ onSubmit }) {\n  const [active, setActive] = useState(false)\n\n  return (\n    <div className='NewTaskForm'>\n      {active ? (\n        <Field\n          onClose={() => setActive(false)}\n          onSave={onSubmit}\n          saveMsg='Add'\n          autoFocus={true}\n          required={true}\n        />\n      ) : (\n        <button\n          type='button'\n          onClick={() => setActive(true)}\n          className='NewTaskForm__button'\n        >\n          + Add a task\n        </button>\n      )}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport './index.scss'\nimport Task from 'Components/Task'\nimport Modal from './Modal'\nimport NewTaskForm from './NewTaskForm'\n\nconst API_ENDPOINT = '/api/v1'\n\nexport default function App() {\n  const [loading, setLoading] = useState(true)\n  const [tasks, setTasks] = useState([])\n  const [modalIsOpen, setIsModalOpen] = useState(false)\n  const [activeTask, setActiveTask] = useState(0)\n\n  // fetch all tasks on initial render\n  useEffect(() => {\n    axios\n      .get(API_ENDPOINT)\n      .then((res) => {\n        setTasks(res.data)\n        setLoading(false)\n      })\n      .catch((err) => console.error(err))\n  }, [])\n\n  function openModal() {\n    setIsModalOpen(true)\n  }\n\n  function closeModal() {\n    setIsModalOpen(false)\n  }\n\n  function toggleTask(index = activeTask) {\n    const completed = !tasks[index].completed\n    updateTask({ completed }, index)\n  }\n\n  function updateTask(props, index = activeTask) {\n    const { _id } = tasks[index]\n    const oldTasks = tasks\n    const newTasks = [...tasks]\n    newTasks[index] = { ...newTasks[index], ...props }\n\n    setTasks(newTasks)\n\n    axios.patch(API_ENDPOINT + '/' + _id, props).catch((err) => {\n      console.log(err)\n      setTasks(oldTasks) // undo changes to state\n    })\n  }\n\n  function deleteTask(index = activeTask) {\n    const { _id } = tasks[index]\n    const oldTasks = tasks\n    const newTasks = [...tasks]\n    newTasks.splice(index, 1)\n\n    setTasks(newTasks)\n    setIsModalOpen(false)\n\n    axios.delete(API_ENDPOINT + '/' + _id).catch((err) => {\n      console.log(err)\n      setTasks(oldTasks) // undo changes to state\n    })\n  }\n\n  function createTask(name) {\n    const oldTasks = tasks\n    const newTask = {\n      name,\n      completed: false,\n      description: '',\n    }\n    setTasks([...oldTasks, { ...newTask, _id: -1 }])\n\n    axios\n      .post(API_ENDPOINT, newTask)\n      .then((res) => setTasks([...oldTasks, res.data]))\n      .catch((err) => {\n        console.log(err)\n        setTasks(oldTasks)\n      })\n  }\n\n  return (\n    <div className='App container'>\n      <h1 className='App__heading'>To-do</h1>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <div className='App__list'>\n            <ul>\n              {tasks.length ? (\n                tasks.map(({ _id, ...props }, index) => (\n                  <Task\n                    key={_id}\n                    {...props}\n                    onToggle={() => toggleTask(index)}\n                    onClick={() => {\n                      setActiveTask(index)\n                      openModal()\n                    }}\n                  />\n                ))\n              ) : (\n                <p className='App__empty-msg'>\n                  You don't have any tasks yet! Click \"Add a task\" to create\n                  one. ↓\n                </p>\n              )}\n            </ul>\n            <NewTaskForm onSubmit={createTask} />\n          </div>\n          <Modal\n            isOpen={modalIsOpen}\n            onClose={closeModal}\n            onToggle={() => toggleTask()}\n            onUpdate={updateTask}\n            onDelete={deleteTask}\n            task={tasks[activeTask]}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from 'Components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}